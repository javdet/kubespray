global
  log /dev/log  local0
  log /dev/log  local1 notice
  chroot /var/lib/haproxy
  stats socket /run/haproxy/admin.sock mode 660 level admin
  stats timeout 30s
  user haproxy
  group haproxy
  daemon

  # Default SSL material locations
  ca-base /etc/ssl/certs
  crt-base /etc/ssl/private

  # Default ciphers to use on SSL-enabled listening sockets.
  # For more information, see ciphers(1SSL). This list is from:
  #  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
  # An alternative list with additional directives can be obtained from
  #  https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy
  ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
  ssl-default-bind-options no-sslv3

defaults
  log global
  mode  http
  option  httplog
  option  dontlognull
  timeout connect 5000
  timeout client  50000
  timeout server  50000
  timeout http-request 15s
  timeout http-keep-alive 15s
  errorfile 400 /etc/haproxy/errors/400.http
  errorfile 403 /etc/haproxy/errors/403.http
  errorfile 408 /etc/haproxy/errors/408.http
  errorfile 500 /etc/haproxy/errors/500.http
  errorfile 502 /etc/haproxy/errors/502.http
  errorfile 503 /etc/haproxy/errors/503.http
  errorfile 504 /etc/haproxy/errors/504.http

frontend monitor-in
  bind *:33305
  mode http
  option httplog
  monitor-uri /monitor

listen stats 
  bind    *:9000
  mode    http
  stats   enable
  stats   hide-version
  stats   uri       /stats
  stats   refresh   30s
  stats   realm     Haproxy\ Statistics
  stats   auth      Admin:Password

{% for key, value in keepalived_vrrp_instances.iteritems() %}
frontend traefik-{{ key }}
  bind {{ value.shared_vips }}:8081
  bind 127.0.0.1:8081
  mode tcp
  option tcplog
  default_backend traefik

frontend k8s-api-{{ key }}
  bind {{ value.shared_vips }}:443
  bind 127.0.0.1:443
  mode tcp
  option tcplog
  tcp-request inspect-delay 5s
  #tcp-request content reject if !HTTP
  tcp-request content accept if { req.ssl_hello_type 1 }
  #use_backend traefik if { req.ssl_sni -m found } { req.ssl_sni -i nodejs-app.virtual.local }
  #use_backend traefik-lb if { req.ssl_sni -m found } !{ req.ssl_sni -i k8s-api.virtual.local }
  default_backend k8s-api
{% endfor %}

backend k8s-api
  mode tcp
  option tcplog
  option tcp-check
  balance roundrobin
  default-server inter 10s downinter 5s rise 2 fall 2 slowstart 60s maxconn 250 maxqueue 256 weight 100
  server k8s-api-1 {{ hostvars['node0-unix.sd.corp.itmh.ru']['ansible_ens160']['ipv4']['address'] }}:6443 check
  server k8s-api-2 {{ hostvars['node1-unix.sd.corp.itmh.ru']['ansible_ens160']['ipv4']['address'] }}:6443 check
  server k8s-api-3 {{ hostvars['node2-unix.sd.corp.itmh.ru']['ansible_ens160']['ipv4']['address'] }}:6443 check

backend traefik-lb 
  mode tcp
  option tcplog
  option tcp-check
  balance roundrobin
  default-server inter 10s downinter 5s rise 2 fall 2 slowstart 60s maxconn 250 maxqueue 256 weight 100
  server traefik-1 {{ hostvars['node0-unix.sd.corp.itmh.ru']['ansible_ens160']['ipv4']['address'] }}:31287 check
  server traefik-2 {{ hostvars['node1-unix.sd.corp.itmh.ru']['ansible_ens160']['ipv4']['address'] }}:31287 check
  server traefik-3 {{ hostvars['node2-unix.sd.corp.itmh.ru']['ansible_ens160']['ipv4']['address'] }}:31287 check

backend traefik
  mode tcp
  option tcplog
  option tcp-check
  balance roundrobin
  default-server inter 10s downinter 5s rise 2 fall 2 slowstart 60s maxconn 250 maxqueue 256 weight 100
  server traefik-1 {{ hostvars['node0-unix.sd.corp.itmh.ru']['ansible_ens160']['ipv4']['address'] }}:31236 track traefik-lb/traefik-1
  server traefik-2 {{ hostvars['node1-unix.sd.corp.itmh.ru']['ansible_ens160']['ipv4']['address'] }}:31236 track traefik-lb/traefik-2
  server traefik-3 {{ hostvars['node2-unix.sd.corp.itmh.ru']['ansible_ens160']['ipv4']['address'] }}:31236 track traefik-lb/traefik-3